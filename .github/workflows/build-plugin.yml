name: Package & Release Production Plugins

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create ZIPs for each plugin (with parent folder)
        run: |
          mkdir -p packaged
          for dir in Production/*; do
            if [ -d "$dir" ]; then
              slug=$(basename "$dir")
              
              # --- MODIFIED VERSION DETECTION ---
              # First, look for a PHP file named after the slug (e.g., my-plugin/my-plugin.php)
              main_php="$dir/$slug.php"
              if [ ! -f "$main_php" ]; then
                # If not found, fall back to the first PHP file alphabetically
                main_php=$(ls "$dir"/*.php | head -n 1 || true)
              fi
              # --- END MODIFIED SECTION ---

              # Extract version from the main PHP file
              version=$(grep -iE "^\s*\*?\s*Version:\s*" "$main_php" | head -n 1 | sed -E 's/^[^:]+:\s*//' | tr -d '[:space:]')
              if [ -z "$version" ]; then
                version="0.0.0"
              fi
              zip_name="${slug}-${version}.zip"

              echo "Packaging $slug (Version: $version) -> $zip_name"
              
              # Create a temporary directory structure that matches what WordPress expects
              temp_build_dir="temp_build"
              rm -rf "$temp_build_dir" # Clean up previous run
              mkdir -p "$temp_build_dir/$slug"
              cp -r "$dir"/. "$temp_build_dir/$slug/"

              # Zip the parent folder, not just its contents
              (cd "$temp_build_dir" && zip -r "../packaged/$zip_name" "$slug" > /dev/null)
              
              # Clean up
              rm -rf "$temp_build_dir"
            fi
          done

      - name: Clean up previous 'latest' release and tag
        run: |
          # This command deletes the release and the underlying 'latest' git tag.
          gh release delete latest --cleanup-tag --yes || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create New 'latest' Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          files: packaged/*.zip
          tag_name: latest
          name: Production Plugins
          body: This is the latest automated build from the main branch.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
